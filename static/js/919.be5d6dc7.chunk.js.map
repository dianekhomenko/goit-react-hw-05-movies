{"version":3,"file":"static/js/919.be5d6dc7.chunk.js","mappings":"uRACaA,EAAO,mCAEpBC,EAAAA,EAAAA,SAAAA,QAAA,gCAEO,IAAMC,EAAY,mCAAG,WAAMC,GAAN,uFACHF,EAAAA,EAAAA,IAAA,gBAAmBE,EAAnB,oBAAiCH,IAD9B,cACpBI,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZC,EAAY,mCAAG,WAAMH,GAAN,uFACHF,EAAAA,EAAAA,IAAA,iBACXE,EADW,4BACWH,EADX,oBADG,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZE,EAAe,mCAAG,WAAMJ,GAAN,uFACNF,EAAAA,EAAAA,IAAA,iBACXE,EADW,4BACWH,EADX,oBADM,cACvBI,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD,yGCa5B,UA1BgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBN,EAAAA,EAAAA,IAAgBC,GADrC,OACQH,EADR,OAEEO,EAAWP,EAAKS,SAFlB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACP,KAGF,wBACsB,IAAnBG,EAAQK,OACLL,EAAQM,KAAI,SAAAC,GAAM,OAChB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOf,GADA,IAMlB,uBAGT,C","sources":["api/api.js","components/MovieDetails/Reviews.js"],"sourcesContent":["import axios from 'axios';\nexport const API_KEY = `0a0fad420f8b287917c1cf2e9edfaf94`;\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'api/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function getData() {\n      const data = await getMovieReviews(movieId);\n      setReviews(data.results);\n    }\n    getData();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length !== 0\n        ? reviews.map(review => (\n            <li key={review.id}>\n              <h5>{review.author}</h5>\n              <p>{review.content}</p>\n            </li>\n          ))\n        : 'There is no reviews'}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","getMovieById","id","response","data","getMovieCast","getMovieReviews","movieId","useParams","useState","reviews","setReviews","useEffect","results","getData","length","map","review","author","content"],"sourceRoot":""}